// <auto-generated />
using System;
using EcommerceWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcommerceWebAPI.Data.Migrations
{
    [DbContext(typeof(EcommerceContex))]
    [Migration("20220725075806_m2mkatalogproduk")]
    partial class m2mkatalogproduk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EcommerceWebAPI.Domain.Katalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Katalogs");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.KatalogProduk", b =>
                {
                    b.Property<int>("KatalogId")
                        .HasColumnType("int");

                    b.Property<int>("ProdukId")
                        .HasColumnType("int");

                    b.HasKey("KatalogId", "ProdukId");

                    b.HasIndex("ProdukId");

                    b.ToTable("KatalogProduk");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.Keranjang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("JumlahItem")
                        .HasColumnType("int");

                    b.Property<int>("ProdukId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdukId");

                    b.HasIndex("UserId");

                    b.ToTable("Keranjangs");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.Produk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Berat")
                        .HasColumnType("int");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Harga")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produks");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.Transaksi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<int>("KeranjangId")
                        .HasColumnType("int");

                    b.Property<int>("TotalHarga")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KeranjangId");

                    b.ToTable("Transaksis");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.TypeProduk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdukId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdukId")
                        .IsUnique();

                    b.ToTable("TypeProduks");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.KatalogProduk", b =>
                {
                    b.HasOne("EcommerceWebAPI.Domain.Katalog", null)
                        .WithMany()
                        .HasForeignKey("KatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebAPI.Domain.Produk", null)
                        .WithMany()
                        .HasForeignKey("ProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.Keranjang", b =>
                {
                    b.HasOne("EcommerceWebAPI.Domain.Produk", null)
                        .WithMany()
                        .HasForeignKey("ProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebAPI.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.Transaksi", b =>
                {
                    b.HasOne("EcommerceWebAPI.Domain.Keranjang", "Keranjang")
                        .WithMany("Transaksis")
                        .HasForeignKey("KeranjangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Keranjang");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.TypeProduk", b =>
                {
                    b.HasOne("EcommerceWebAPI.Domain.Produk", null)
                        .WithOne("TypeProduk")
                        .HasForeignKey("EcommerceWebAPI.Domain.TypeProduk", "ProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.Keranjang", b =>
                {
                    b.Navigation("Transaksis");
                });

            modelBuilder.Entity("EcommerceWebAPI.Domain.Produk", b =>
                {
                    b.Navigation("TypeProduk")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
